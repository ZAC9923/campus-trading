<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.springmvc.dao.GoodsMapper" >
  <resultMap id="BaseResultMap" type="com.springmvc.pojo.Goods" >

    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="catelog_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="price" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="real_price" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="start_time" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="polish_time" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="end_time" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="commet_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="phone_number" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="qq_number" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="wx_number" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="good_city" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="good_buy_method" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="good_address" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="viewCount" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="describle" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
      <arg column="status" jdbcType="TINYINT" javaType="java.lang.Byte" />
    </constructor>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.springmvc.pojo.Goods" useGeneratedKeys="true" keyProperty="id">

    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into goods (catelog_id, user_id,
      name, price, real_price, start_time, 
      polish_time, end_time, commet_num, 
      phone_number, qq_number, wx_number, 
      good_city, good_buy_method, good_address, 
      viewCount, describle)
    values ( #{catelogId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
      #{name,jdbcType=VARCHAR}, #{price,jdbcType=REAL}, #{realPrice,jdbcType=REAL}, #{startTime,jdbcType=VARCHAR}, 
      #{polishTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR}, #{commetNum,jdbcType=INTEGER}, 
      #{phoneNumber,jdbcType=VARCHAR}, #{qqNumber,jdbcType=VARCHAR}, #{wxNumber,jdbcType=VARCHAR}, 
      #{goodCity,jdbcType=VARCHAR}, #{goodBuyMethod,jdbcType=VARCHAR}, #{goodAddress,jdbcType=VARCHAR}, 
      #{viewcount,jdbcType=INTEGER}, #{describle,jdbcType=LONGVARCHAR})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.springmvc.pojo.Goods" >

    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update goods
    set catelog_id = #{catelogId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      real_price = #{realPrice,jdbcType=REAL},
      start_time = #{startTime,jdbcType=VARCHAR},
      polish_time = #{polishTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      commet_num = #{commetNum,jdbcType=INTEGER},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      qq_number = #{qqNumber,jdbcType=VARCHAR},
      wx_number = #{wxNumber,jdbcType=VARCHAR},
      good_city = #{goodCity,jdbcType=VARCHAR},
      good_buy_method = #{goodBuyMethod,jdbcType=VARCHAR},
      good_address = #{goodAddress,jdbcType=VARCHAR},
      viewCount = #{viewcount,jdbcType=INTEGER},
      describle = #{describle,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, catelog_id, user_id, name, price, real_price, start_time, polish_time, 
    end_time, commet_num, phone_number, qq_number, wx_number, good_city, good_buy_method, 
    good_address, viewCount, describle,status
    from goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAllGoods" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
      id, catelog_id, user_id, name, price, real_price, start_time, polish_time,
      end_time, commet_num, phone_number, qq_number, wx_number, good_city, good_buy_method,
      good_address, viewCount, describle,status
    from
      goods
    order by
      polish_time DESC
  </select>

  <select id="searchGoods" resultMap="BaseResultMap">

    select
      id, catelog_id, user_id, name, price, real_price, start_time, end_time, polish_time, commet_num, describle, phone_number,qq_number,wx_number,good_city,good_buy_method,good_address,viewCount,status
    from
      goods
    where
     (name like concat('%',#{name},'%')
    OR
      describle like concat('%',#{describle},'%'))
    AND
      status = #{status}
    order by
      polish_time
    ASC

  </select>

  <select id="selectByCatelogAndStatus" resultMap="BaseResultMap">
    SELECT
      id, catelog_id, user_id, name, price, real_price, start_time, end_time, polish_time, commet_num, describle, phone_number,qq_number,wx_number,good_city,good_buy_method,good_address,viewCount,status
    FROM
      goods
    WHERE
      catelog_id = #{cid}
    AND
      status = #{status}
  </select>

  <select id="selectByCatelogOrderByPolishDate" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
      id, catelog_id, user_id, name, price, real_price, start_time, end_time, polish_time, commet_num, describle, phone_number,qq_number,wx_number,good_city,good_buy_method,good_address,viewCount,status
    from
      goods
    where
      catelog_id = #{catelog_id,jdbcType=INTEGER}
    AND
      status = 1
    order by
      polish_time
    DESC
      limit #{limit,jdbcType=INTEGER}

  </select>

  <select id="selectGoodsOrderByDate" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
      id, catelog_id, user_id, name, price, real_price, start_time, end_time, polish_time, commet_num, describle, phone_number,qq_number,wx_number,good_city,good_buy_method,good_address,viewCount,status
    from
      goods
    order by
      polish_time
    DESC
      limit #{limit,jdbcType=INTEGER}

  </select>

  <select id="selectGoodsByCatelogStatus" resultMap="BaseResultMap">
    select
      id, catelog_id, user_id, name, price, real_price, start_time, end_time, polish_time, commet_num, describle, phone_number,qq_number,wx_number,good_city,good_buy_method,good_address,viewCount,status
    from
      goods
    where
      catelog_id = #{catelogId}
  </select>

  <select id="getGoodsByUserId" resultMap="BaseResultMap">
    select
      id, catelog_id, user_id, name, price, real_price, start_time, end_time, polish_time, commet_num, describle, phone_number,qq_number,wx_number,good_city,good_buy_method,good_address,viewCount,status
    from
      goods
    where
      user_id = #{user_id,jdbcType=INTEGER}

  </select>

  <select id="selectGoodsByStatusOrderByPolishTime" resultMap="BaseResultMap">
    select
      id, catelog_id, user_id, name, price, real_price, start_time, end_time, polish_time, commet_num, describle, phone_number,qq_number,wx_number,good_city,good_buy_method,good_address,viewCount,status
    from
      goods
    where
      status=#{status}
    ORDER BY
      polish_time
    DESC
  </select>

  <select id="selectPrimaryKey" resultMap="BaseResultMap">
    SELECT
      *
    FROM
      goods
  </select>

  <update id="updateViewCountByPrimaryKey">

    UPDATE
     goods
    SET
     viewCount = #{viewCount}
    WHERE
      id = #{id}

  </update>

  <select id="selectGoodsByStatusOrderByViewcountLimit" resultMap="BaseResultMap">
    SELECT
      *
    FROM
      goods
    WHERE
      status = #{status}
    ORDER BY
      viewCount
    DESC
      limit #{limit}
  </select>
  
  <update id="updatePolishTimeByPrimaryKey">
    UPDATE
      goods
    SET
      polish_time = #{polishTime}
    WHERE
      id = #{id}
  </update>
  <update id="updateStatusByPrimaryKey">
    UPDATE
      goods
    SET
      status = #{status}
    WHERE
      id = #{id}
  </update>
  
  <update id="updateEndTimeByPrimaryKey">
    UPDATE
      goods
    SET
      end_time = #{endTime}
    WHERE
      id = #{id}
  </update>

  <update id="updateCommentNumByPrimaryKey">
    UPDATE
      goods
    SET
      commet_num = #{commentNum}
    WHERE
      id = #{id}
  </update>

  <select id="searchGoodsByKeyWord" resultMap="BaseResultMap">

    select
      id, catelog_id, user_id, name, price, real_price, start_time, end_time, polish_time, commet_num, describle, phone_number,qq_number,wx_number,good_city,good_buy_method,good_address,viewCount,status
    from
      goods
    where
      (name like concat('%',#{name},'%')
    OR
      describle like concat('%',#{describle},'%'))
    order by
      polish_time
    ASC

  </select>

  <select id="searchGoodsByKeyWordAndPrimary" resultMap="BaseResultMap">

    select
      id, catelog_id, user_id, name, price, real_price, start_time, end_time, polish_time, commet_num, describle, phone_number,qq_number,wx_number,good_city,good_buy_method,good_address,viewCount,status
    from
      goods
    where
      (name like concat('%',#{name},'%')
    OR
      describle like concat('%',#{describle},'%'))
    AND
      id = #{id}
    order by
      polish_time
    ASC

  </select>

</mapper>